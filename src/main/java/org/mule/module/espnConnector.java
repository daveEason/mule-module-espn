/**
 * This file was automatically generated by the Mule Development Kit
 */
package org.mule.module;

import org.apache.commons.httpclient.HttpClient;
import org.mule.api.annotations.Configurable;
import org.mule.api.annotations.Connector;
import org.mule.api.annotations.Processor;
import org.mule.api.annotations.param.Default;
import org.mule.api.annotations.param.Optional;
import org.mule.api.annotations.rest.*;

import java.io.IOException;

/**
 * Cloud Connector
 *
 * @author MuleSoft, Inc.
 */
@Connector(name="espn", schemaVersion="1.0-SNAPSHOT")
public abstract class espnConnector
{
    public static final String BASE_URI = "http://api.espn.com/v1";
    public static final String MLB_RESOURCE = "/sports/baseball/mlb";


    @RestHttpClient
    private HttpClient httpClient;

    /**
     * Configurable
     */
    @Configurable
    @RestUriParam("apiKey")
    private String apiKey;


    public espnConnector()
    {
        httpClient = new HttpClient();
    }

    /**
     * Set property
     *
     * @param apiKey - ESPN API key (see developer.espn.com for access to their APIs)
     */
    public void setApiKey(String apiKey)
    {
        this.apiKey = apiKey;
    }

    public String getApiKey()
    {
        return this.apiKey;
    }

    /**
     * Set property
     *
     * @param httpClient
     */

    public void setHttpClient(HttpClient httpClient){
        this.httpClient = httpClient;
    }

    public HttpClient getHttpClient(){
        return this.httpClient;
    }


    /**
     * getListMLBaseballAthletes
     *
     * {@sample.xml ../../../doc/espn-connector.xml.sample espn:get-list-m-l-baseball-athletes}
     *
     * @param group - ESPN group number representing an MLB division
     * @return String - JSON string representing MLB athletes
     * @throws IOException
     *
     */
    @Processor
    @RestCall(uri = BASE_URI + MLB_RESOURCE + "/athletes?apikey={apiKey}", method = HttpMethod.GET)
    public abstract String getListMLBaseballAthletes(@Optional @Default("") @RestQueryParam("groups") String group) throws IOException;

    /**
     * getMLBaseballAthlete
     *
     * {@sample.xml ../../../doc/espn-connector.xml.sample espn:get-m-l-baseball-athlete}
     *
     * @param playerId - ESPN player id
     * @return String - JSON string representing a particular MLB athletes
     * @throws IOException
     *
     */
    @Processor
    @RestCall(uri = BASE_URI + MLB_RESOURCE + "/athletes/{playerId}/dates/{season}?apikey={apiKey}", method = HttpMethod.GET)
    public abstract String getMLBaseballAthlete(@RestUriParam("playerId") String playerId, @Optional @Default("") @RestUriParam("season") String season) throws IOException;


    /**
     * getMLBaseballTeam
     *
     * {@sample.xml ../../../doc/espn-connector.xml.sample espn:get-m-l-baseball-team}
     *
     * @param teamId - ESPN MLB team identifier
     * @return String - JSON string representing a particular MLB athletes associated with a particular team
     * @throws IOException
     *
     */
    @Processor
    @RestCall(uri = BASE_URI + MLB_RESOURCE + "/athletes/teams/{teamId}?apikey={apiKey}", method = HttpMethod.GET)
    public abstract String getMLBaseballTeam(@RestUriParam("teamId") String teamId) throws IOException;


}
